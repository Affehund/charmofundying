buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        maven {
            url = 'https://repo.spongepowered.org/repository/maven-public/'
            content { includeGroup "org.spongepowered" }
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'gradle.plugin.com.matthewprenger', name: 'CurseGradle', version: '1.4.0'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
		classpath group: 'org.parchmentmc', name: 'librarian', version: '1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = "${mod_version}"
group = "top.theillusivec4.curioofundying"
archivesBaseName = "curioofundying-forge"

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

minecraft {
    mappings channel: 'parchment', version: '2021.09.05-1.17.1'

    runs {
        client {
            workingDirectory project.file('run')

            arg '-mixin.config=curioofundying.mixins.json'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
			property 'mixin.env.disableRefMap', 'true'

            mods {
                curioofundying {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            arg '-mixin.config=curioofundying.mixins.json'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
			property 'mixin.env.disableRefMap', 'true'

            mods {
                curioofundying {
                    source sourceSets.main
                }
            }
        }
    }
}

// todo: https://github.com/MinecraftForge/MinecraftForge/pull/8064
minecraft.runs.all {
    property 'ignoreList', "bootstraplauncher,securejarhandler,asm-commons,asm-util,asm-analysis,asm-tree,asm,client-extra,fmlcore,javafmllanguage,mclanguage,forge-1.17.1-37.0.70,1.17.1-forge-37.0.70"
}

mixin {
    add sourceSets.main, 'curioofundying.refmap.json'
}

repositories {
    maven {
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"

	annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'

	runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
}

def replaceResources = tasks.register('replaceResources', Copy) {
    it.outputs.upToDateWhen { false }

    it.from(sourceSets.main.resources) {
        include 'META-INF/mods.toml'
        expand 'version': version, 'mc_version_range': mc_version_range, 'forge_version_range': forge_version_range, 'loader_version': loader_version, 'curios_version_range': curios_version_range
    }
    it.into "$buildDir/resources/main/"
}

processResources {
    from("CHANGELOG.md")
    from("../LICENSE")
    duplicatesStrategy(DuplicatesStrategy.FAIL)
    exclude('META-INF/mods.toml')
    configure { finalizedBy(replaceResources) }
}

sourceSets {
    main {
        resources {
            srcDirs += '../docs'
        }
    }
}

jar {
    manifest {
        attributes(["Specification-Title"     : "Curio of Undying",
                    "Specification-Vendor"    : "C4",
                    "Specification-Version"   : "1",
                    "Implementation-Title"    : "Curio of Undying",
                    "Implementation-Version"  : "${getArchiveVersion()}",
                    "Implementation-Vendor"   : "C4",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "MixinConfigs"            : "curioofundying.mixins.json"],)
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
}

artifacts {
    archives sourcesJar
}

jar.finalizedBy('reobfJar')

tasks.build.dependsOn sourcesJar

curseforge {

    project {
        apiKey = findProperty('curseKey') ?: 0
        id = '316873'
        releaseType = "${curse_release}"
        changelogType = 'markdown'
        changelog = file('CHANGELOG.md')
        relations {
            requiredDependency 'curios'
        }
        addArtifact(sourcesJar)
		"${curse_versions}".split(',').each {
            addGameVersion "${it}"
        }
    }
}
